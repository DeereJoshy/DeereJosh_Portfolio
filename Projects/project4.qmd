---
title: "Client Report - Can You Predict This"
subtitle: "Course DS 250"
author: "Josh Deere"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
```

```{python}
# %%
# Load modules
from sklearn.model_selection import train_test_split
from sklearn import tree
from sklearn import metrics
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
```

## Elevator pitch

_This project is on creating a model that can predict whether a home was built prior to implementation of rules on asbestos. I found that the best metrics for prediction are the number of dwelling units, stories in the home, and the number of car space in the garage._

```{python}
#| label: project data
#| code-summary: Read and format project data
# Load data
dwellings_ml = pd.read_csv('https://github.com/byuidatascience/data4dwellings/raw/master/data-raw/dwellings_ml/dwellings_ml.csv')
```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

__Create 2-3 charts that evaluate potential relationships between the home variables and before1980. Explain what you learn from the charts that could help a machine learning algorithm.__

_Looking at the number of bedrooms and dwelling units, I can see some semblance of pattern in determining the likelihood of a home being built before 1980. The number of car space in the garage also is a solid predictor. The basement and finished basement metrics also are valid predictors, showing that the more finished basement space, the more likely the house was built after 1980._

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here
story_mean = dwellings_ml['stories'].mean()



fig = px.strip(dwellings_ml, x = 'numbdrm' , y = 'stories',color = 'before1980')

# fig.add_trace(px.box(dwellings_ml,
#   x = 'numbdrm',
#   y = 'stories',
#   points = False
# ))

fig.update_traces(quartilemethod = 'linear')

fig.update_layout(title = 'The More Bedrooms, The Newer the Home',yaxis = dict(
  autorange = True,
  showgrid = True,
  dtick = 1
))

fig.show()
# Boxplots for graph for each bedroom number
```

```{python}
fig = px.scatter(dwellings_ml, x = 'totunits', y = 'nocars',color = 'before1980')
fig.show()
```

```{python}
fig = px.scatter(dwellings_ml, x = 'finbsmnt', y = 'basement',color = 'before1980')
fig.show()
```

## QUESTION|TASK 2

__Build a classification model labeling houses as being built “before 1980” or “during or after 1980”. Your goal is to reach or exceed 90% accuracy. Explain your final model choice (algorithm, tuning parameters, etc) and describe what other models you tried.__

_I went with a decision tree model considering that they are very beginner friendly and was easy for me to understand and visualize. I did look at new models but for a lot of them I struggled to understand logic for how the algorithm was running._

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here
X = dwellings_ml[['nocars', 'totunits', 'stories', 'numbdrm','finbsmnt','basement','sprice']]
y = dwellings_ml['before1980']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=50, stratify=y)

rf = RandomForestClassifier(random_state=0)  
rf.fit(X, y)  

y_pred = rf.predict(X)

accuracy_score(y,y_pred)

```

## QUESTION|TASK 3

__Justify your classification model by discussing the most important features selected by your model. This discussion should include a chart and a description of the features.__

_The most important features in the model was selling price and the number of stories in the home. The size of the basement also had minor weight in the model prediction as well._

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here
df_features = pd.DataFrame(
    {'f_names': X_train.columns, 
    'f_values': rf.feature_importances_}).sort_values('f_values', ascending = False)

```

## QUESTION|TASK 4

__Describe the quality of your classification model using 2-3 different evaluation metrics. You also need to explain how to interpret each of the evaluation metrics you use.__

_type your results and analysis here_

```{python}
#| label: Q4
#| code-summary: Read and format data
# Include and execute your code here

# print(metrics.classification_report(y_pred,y_test))

```